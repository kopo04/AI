# Colab에서 Selenium 사용을 위한 Chromium 및 ChromeDriver 설치
import sys

!sudo add-apt-repository ppa:saiarcot895/chromium-beta
!sudo apt remove chromium-browser
!sudo snap remove chromium
!sudo apt install chromium-browser

!pip3 install selenium
!apt-get update
!apt install chromium-chromedriver
!cp /usr/lib/chromium-browser/chromedriver /usr/bin
sys.path.insert(0,'/usr/lib/chromium-browser/chromedriver')


# Selenium을 사용하여 YNA(연합뉴스) 인기 기사 페이지를 열기
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service

# Chrome WebDriver 옵션 설정 (헤드리스 모드)
options = webdriver.ChromeOptions()
options.add_argument('--headless')  # GUI 없이 실행
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')

# ChromeDriver 실행
webdriver_service = Service('/usr/bin/chromedriver')
driver = webdriver.Chrome(service=webdriver_service, options=options)

# 연합뉴스 인기 기사 페이지 열기
url = 'https://www.yna.co.kr/theme/mostviewed/index'
driver.get(url)


# 연합뉴스 인기 기사에서 순위, 제목, 작성일을 크롤링하여 리스트에 저장  
columns = ['순위', '기사 제목', '기사 작성일']
rank = []
title = []
date = []

for i in range(1, 20):
    rank.append(i)                                    
    title.append(driver.find_element(By.CSS_SELECTOR, '#container > div > div.content03 > section > div > ul > li:nth-child(' + str(i) + ') > div > div > strong > a > span').text)
    date.append(driver.find_element(By.CSS_SELECTOR, '#container > div > div.content03 > section > div > ul > li:nth-child(' + str(i) +') > div > div > span').text)

# 크롤링한 인기 기사 데이터를 Pandas DataFrame으로 변환하여 출력
import pandas as pd

df = pd.DataFrame({columns[0]: rank,
                columns[1]: title,
                columns[2]: date}, columns=columns)
df.head()

# 크롤링한 인기 기사 데이터를 CSV 파일(top19_news.csv)로 저장
df.to_csv('top19_news.csv', index=False)

# 나눔 폰트 설치 및 Matplotlib 폰트 캐시 초기화 (한글 깨짐 방지)
!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

# CSV 파일을 읽어와 두 번째 컬럼(기사 제목)을 순차적으로 출력
import csv

#CSV 파일 읽어오기
f = open('top19_news.csv', 'r')
rdr = csv.reader(f)

title = ''
for line in rdr:
    title = title + ' ' + line[1]
    print(title)
f.close()

#인덱스 0~5를 제외하고 6부터 슬라이싱하기
title = title[6:]
print(title)

# 한글 형태소 분석(Okt) 및 워드클라우드 생성을 위한 라이브러리 설치 및 임포트
!pip install konlpy

from wordcloud import WordCloud
import matplotlib.pyplot as plt
from collections import Counter
from konlpy.tag import Okt
import numpy as np

#문자열 분석하기
okt = Okt()
nouns = okt.nouns(title)
words = [n for n in nouns if len(n) > 1]
c = Counter(words)

#워드클라우드 생성하기
wc = WordCloud(font_path='/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf', scale=2.0, colormap='Spectral')
gen = wc.generate_from_frequencies(c)
plt.figure()
plt.imshow(gen)
